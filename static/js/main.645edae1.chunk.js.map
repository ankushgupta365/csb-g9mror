{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","name","job","onClick","removeCharacter","Table","Form","initialState","state","handleChange","event","target","value","setState","submitForm","handleSubmit","this","htmlFor","type","id","onChange","Component","App","characters","filter","character","i","rootElement","document","getElementById","ReactDOM","render"],"mappings":"2KAEMA,EAAc,WAClB,OACE,gCACE,+BACE,sCACA,2CAKFC,EAAY,SAACC,GACjB,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GACzC,OACE,+BACE,6BAAKD,EAAIE,OACT,6BAAKF,EAAIG,MACT,6BACE,wBAAQC,QAAS,kBAAMR,EAAMS,gBAAgBJ,IAA7C,wBAJKA,MASb,OAAO,gCAAQJ,KAmBFS,EAbD,SAACV,GACb,IAAQE,EAAmCF,EAAnCE,cAAeO,EAAoBT,EAApBS,gBACvB,OACE,kCACE,cAAC,EAAD,IACA,cAAC,EAAD,CACEP,cAAeA,EACfO,gBAAiBA,Q,OCnCnBE,E,4MACJC,aAAe,CACbN,KAAM,GACNC,IAAK,I,EAEPM,MAAQ,EAAKD,a,EAEbE,aAAe,SAACC,GACd,MAAwBA,EAAMC,OAAtBV,EAAR,EAAQA,KAAMW,EAAd,EAAcA,MACd,EAAKC,SAAL,eACGZ,EAAOW,K,EAGZE,WAAa,WACX,EAAKnB,MAAMoB,aAAa,EAAKP,OAC7B,EAAKK,SAAS,EAAKN,e,4CAGrB,WACE,MAAsBS,KAAKR,MAAnBP,EAAR,EAAQA,KAAMC,EAAd,EAAcA,IACd,OACE,iCACE,uBAAOe,QAAQ,OAAf,kBACA,uBACEC,KAAK,OACLjB,KAAK,OACLkB,GAAG,OACHP,MAAOX,EACPmB,SAAUJ,KAAKP,eAEjB,uBAAOQ,QAAQ,MAAf,iBACA,uBACEC,KAAK,OACLjB,KAAK,MACLkB,GAAG,MACHP,MAAOV,EACPkB,SAAUJ,KAAKP,eAEjB,uBAAOS,KAAK,SAASN,MAAM,SAAST,QAASa,KAAKF,oB,GAtCvCO,aA4CJf,IC1CTgB,E,4MACJd,MAAQ,CACNe,WAAY,I,EAGdnB,gBAAkB,SAACJ,GACjB,IAAQuB,EAAe,EAAKf,MAApBe,WAER,EAAKV,SAAS,CACZU,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACxC,OAAOA,IAAM1B,Q,EAInBe,aAAe,SAACU,GACd,EAAKZ,SAAS,CAAEU,WAAW,GAAD,mBAAM,EAAKf,MAAMe,YAAjB,CAA6BE,O,4CAGzD,WACE,IAAQF,EAAeP,KAAKR,MAApBe,WAER,OAEE,cADA,CACA,sBACE,cAAC,EAAD,CACE1B,cAAe0B,EACfnB,gBAAiBY,KAAKZ,kBAExB,cAAC,EAAD,CAAMW,aAAcC,KAAKD,sB,GA5BfM,aAkCHC,ICjCTK,EAAcC,SAASC,eAAe,QAE5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAC,EAAD,MAEFJ,K","file":"static/js/main.645edae1.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst TableHeader = () => {\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        <th>Name</th>\r\n        <th>Job</th>\r\n      </tr>\r\n    </thead>\r\n  );\r\n};\r\nconst TableBody = (props) => {\r\n  const rows = props.characterData.map((row, index) => {\r\n    return (\r\n      <tr key={index}>\r\n        <td>{row.name}</td>\r\n        <td>{row.job}</td>\r\n        <td>\r\n          <button onClick={() => props.removeCharacter(index)}>Remove</button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  });\r\n  return <tbody>{rows}</tbody>;\r\n};\r\n\r\n// if TableBody component is a class component then we have to add this keyword to retrive the props and in the arrow function components we dont need a this keyword to retreive the props\r\n// Also, jis name se props atguments ke andar di hai usi name se receive bhi krni pdengi\r\n\r\nconst Table = (props) => {\r\n  const { characterData, removeCharacter } = props;\r\n  return (\r\n    <table>\r\n      <TableHeader />\r\n      <TableBody\r\n        characterData={characterData}\r\n        removeCharacter={removeCharacter}\r\n      />\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Form extends Component {\r\n  initialState = {\r\n    name: \"\",\r\n    job: \"\"\r\n  };\r\n  state = this.initialState;\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n  submitForm = () => {\r\n    this.props.handleSubmit(this.state);\r\n    this.setState(this.initialState);\r\n  };\r\n\r\n  render() {\r\n    const { name, job } = this.state;\r\n    return (\r\n      <form>\r\n        <label htmlFor=\"name\">Name</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          id=\"name\"\r\n          value={name}\r\n          onChange={this.handleChange}\r\n        />\r\n        <label htmlFor=\"job\">Job</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"job\"\r\n          id=\"job\"\r\n          value={job}\r\n          onChange={this.handleChange}\r\n        />\r\n        <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React, { Component } from \"react\";\r\nimport Table from \"./Table.js\";\r\nimport Form from \"./Form\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    characters: []\r\n  };\r\n\r\n  removeCharacter = (index) => {\r\n    const { characters } = this.state;\r\n\r\n    this.setState({\r\n      characters: characters.filter((character, i) => {\r\n        return i !== index;\r\n      })\r\n    });\r\n  };\r\n  handleSubmit = (character) => {\r\n    this.setState({ characters: [...this.state.characters, character] });\r\n  };\r\n\r\n  render() {\r\n    const { characters } = this.state;\r\n\r\n    return (\r\n      //to pass function as a prop use this keyword\r\n      <>\r\n        <Table\r\n          characterData={characters}\r\n          removeCharacter={this.removeCharacter}\r\n        />\r\n        <Form handleSubmit={this.handleSubmit} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}